<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_exit</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-98</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
wall = class_solid;

place_player();
instance_create(x, y, gui_player_light);

target_x = x;
target_y = y;
//_x = (x - x mod 32)/32;
//_y = (y - y mod 32)/32;
h_speed = 0;
v_speed = 0;

hp = 5;
max_hp = 10;

if (!instance_exists(gui_camera)) camera = instance_create(x, y, gui_camera);
if (!instance_exists(gui_health_bar)) healthBar = instance_create(x, y, gui_health_bar);

state_machine_init();
state_create("Walk", player_walk);
state_create("Attack", player_attack);

state_init("Walk");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state_switch_previous();
global.move = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Everything
getInput();
state_execute();
if (!instance_exists(gui_player_light)) instance_create(x, y, gui_player_light);

if (z) {
    with (class_enemy) instance_destroy();
    x = obj_exit.x;
    y = obj_exit.y;
    target_x = x;
    target_y = y;
}
if (q) {
    state_switch(player_attack, true);
    alarm_set(0, room_speed/4);
    global.move = true;
    global.turn++;
    show_debug_message(global.turn);
}
if (mouse_check_button_released(mb_left)) instance_create(mouse_x, mouse_y, class_enemy);
if (mouse_check_button(mb_right)) {
    mp_grid_clear_cell(global.grid, (mouse_x - mouse_x mod 32)/32, (mouse_y - mouse_y mod 32)/32);
    todel = collision_point(mouse_x, mouse_y, obj_wall, false, true);
    with (todel) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*Animation
if (!global.move) {
    image_index = 0;
    image_speed = 0;
} else image_speed = 2;

if (h_speed &gt; 0) sprite_index = spr_player_walk_right;
if (h_speed &lt; 0) sprite_index = spr_player_walk_left;
if (h_speed == 0) sprite_index = spr_player;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state_cleanup();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
